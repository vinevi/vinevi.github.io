{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/guides/mm9/glitches","result":{"data":{"page":{"__typename":"MdxPage","title":"Glitches for Might & Magic IX","slug":"/guides/mm9/glitches","excerpt":"Fall damage Quick save and quick load while falling resets velocity and so there will not be any fall damage if you were to reload beforeâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Glitches for Might & Magic IX\",\n  \"slug\": \"/guides/mm9/glitches\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Fall damage\"), mdx(\"p\", null, \"Quick save and quick load while falling resets velocity and so there will not be any fall damage if you were to reload before hitting the ground.\"), mdx(\"h2\", null, \"Eye of Leggib\"), mdx(\"p\", null, \"To fly somewhere:\"), mdx(\"p\", null, \"quicksave -> cast Eye of Leggib -> quick load -> fly somewhere -> quicksave -> press esc or space to cancel -> quickload\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If done like that the AI of monsters nearby will be idle until triggered by attacking or in some other way, walking around will not trigger monsters.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once loaded after casting Eye of Leggib the duration will be infinite.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While flying the hitbox is reduced greatly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While flying the party can still cast spells or attack, but they will remain at point where the spell was used.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quicksaving and quickloading after flying somewhere will move the party there.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cancelling the spell normally will reset the AI and monsters will get triggered when walking around.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Party is still vulnerable while using the spell, the monsters will attack invisible party in the place where the spell was used.\")), mdx(\"h2\", null, \"Passing map transition dialogue box to the other saves\"), mdx(\"p\", null, \"Usually before traveling to any map the game is asking for confirmation, during that the game is paused. However, while in that state the game can register input once in a while. One of the examples will be quickloading. While the message is on hold quickload button, it may take from 5 to 20 second to register. Afterwards the save will be loaded, but the message will stay allowing to travel.\"), mdx(\"p\", null, \"That only seems to be working with map transition dialogue boxes.\"), mdx(\"h2\", null, \"Passing normal dialogue box to the other saves\"), mdx(\"p\", null, \"If the party were to fall from a great height and talk to an NPC right before landing there is a chance that the party dies at the same time as the dialogue box appears. Then it will stay on screen after death and will be still interactable. To interact anything that shows cursor can be used, for example Heal spell. Quicksaving and quickloading can also be used during that allowing to pass that dialogue box to any other save.\"), mdx(\"h2\", null, \"Interrupting inventory actions\"), mdx(\"p\", null, \"While targeting something in inventory, for example using Enchant Item spell Map key can be used. That will open the map and will allow to leave the inventory, however the inventory will keep its state. So for example loading any other save and clicking on an item in the inventory will apply Enchant Item spell even though it was used in a different save.\"), mdx(\"h2\", null, \"Moving objects with the Magic Mine spell\"), mdx(\"p\", null, \"Some objects in the game, including characters are dynamic. Hitting anything with a magic mine will move it slightly. The objects that are dynamic are usually not shaded.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/guides/mm9/glitches"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}